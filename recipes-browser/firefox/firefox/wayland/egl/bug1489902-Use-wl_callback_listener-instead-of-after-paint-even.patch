diff --git a/widget/gtk/mozcontainer.cpp b/widget/gtk/mozcontainer.cpp
--- a/widget/gtk/mozcontainer.cpp
+++ b/widget/gtk/mozcontainer.cpp
@@ -212,6 +212,7 @@ moz_container_init (MozContainer *contai
       container->surface = nullptr;
       container->subsurface = nullptr;
       container->eglwindow = nullptr;
+      container->frame_callback_handler = nullptr;
       container->committed = false;
       container->egl_window_width = -1;
       container->egl_window_height = -1;
@@ -234,14 +235,17 @@ moz_container_init (MozContainer *contai
 }
 
 #if defined(MOZ_WAYLAND)
-static void
-moz_container_after_paint(GdkFrameClock *clock, MozContainer *container)
-{
-    container->committed = true;
-    g_signal_handlers_disconnect_by_func(clock,
-         reinterpret_cast<gpointer>(moz_container_after_paint), container);
+static void frame_callback_handler(void *data, struct wl_callback *callback,
+                                   uint32_t time) {
+  MozContainer *container = MOZ_CONTAINER(data);
+  g_clear_pointer(&container->frame_callback_handler, wl_callback_destroy);
+  container->committed = TRUE;
 }
 
+static const struct wl_callback_listener frame_listener = {
+    frame_callback_handler
+};
+
 /* We want to draw to GdkWindow owned by mContainer from Compositor thread but
  * Gtk+ can be used in main thread only. So we create wayland wl_surface
  * and attach it as an overlay to GdkWindow.
@@ -286,10 +290,9 @@ moz_container_map_surface(MozContainer *
           return false;
         }
 
-        GdkFrameClock *clock = sGdkWindowGetFrameClock(window);
-        g_signal_connect_after(clock, "after-paint",
-                               G_CALLBACK(moz_container_after_paint),
-                               container);
+        container->frame_callback_handler = wl_surface_frame(gtk_surface);
+        wl_callback_add_listener(container->frame_callback_handler, &frame_listener,
+                                 container);
 
         container->subsurface =
           wl_subcompositor_get_subsurface (container->subcompositor,
@@ -317,6 +320,7 @@ moz_container_unmap_surface(MozContainer
     g_clear_pointer(&container->eglwindow, wl_egl_window_destroy);
     g_clear_pointer(&container->subsurface, wl_subsurface_destroy);
     g_clear_pointer(&container->surface, wl_surface_destroy);
+    g_clear_pointer(&container->frame_callback_handler, wl_callback_destroy);
     container->committed = false;
 }
 
@@ -576,6 +580,12 @@ moz_container_add(GtkContainer *containe
 struct wl_surface*
 moz_container_get_wl_surface(MozContainer *container)
 {
+    if (!container->surface) {
+        if (!container->committed) {
+            return nullptr;
+        }
+    }
+
     if (!container->subsurface || !container->surface) {
         GdkWindow* window = gtk_widget_get_window(GTK_WIDGET(container));
         if (!gdk_window_is_visible(window))
diff --git a/widget/gtk/mozcontainer.h b/widget/gtk/mozcontainer.h
--- a/widget/gtk/mozcontainer.h
+++ b/widget/gtk/mozcontainer.h
@@ -73,6 +73,7 @@ struct _MozContainer
     struct wl_surface       *surface;
     struct wl_subsurface    *subsurface;
     struct wl_egl_window    *eglwindow;
+    struct wl_callback *frame_callback_handler;
     gboolean                 committed;
     gint egl_window_width;
     gint egl_window_height;
